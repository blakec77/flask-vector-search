from flask import Flask, request, jsonify
import openai

# Initialize the Flask application
app = Flask(__name__)

# Set your OpenAI API key
openai.api_key = 'sk-EE2UucEwgWnrEtCluau-LDgh7kVmhq49z1aRQii2umT3BlbkFJd3vr9SVEkkkbDngFzepCsMWlf7pgD6BRTArIQM0DEA'

# Define the routes
@app.route('/')
def home():
    return "Hello, world! Your Flask app is running."

@app.route('/about')
def about():
    return "This is the about page."

@app.route('/contact')
def contact():
    return "This is the contact page."

@app.route('/query_vector_gpt', methods=['POST'])
def query_vector_gpt():
    data = request.json
    query = data['query']

    # Perform vector search
    vector_results = perform_vector_search(query)

    # Use ChatGPT to generate a response
    response = generate_chat_gpt_response(query, vector_results)

    return jsonify({"response": response})

def generate_chat_gpt_response(query, vector_results):
    prompt = "The following is a response generated by GPT-3 using the vector results:\n\nQuestion: " + query + "\nVector Results: " + str(vector_results) + "\n\nResponse:"
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=prompt,
        max_tokens=150
    )
    return response['choices'][0]['text']

def perform_vector_search(query):
    # Generate embedding
    embedding = generate_embedding(query)

    # Search vector store
    results = search_vector_store(embedding)

    return results

def generate_embedding(query):
    response = openai.Embedding.create(
        model="text-embedding-ada-002",
        input=[query]
    )
    return response['data'][0]['embedding']

def search_vector_store(embedding):
    search_response = openai.VectorStore.search(
        vector_store_id="vs_Srkl2boUdnlLGXd7XD4kthJL",  # Replace with your vector store ID
        query_embedding=embedding,
        top_k=5
    )
    return [result['metadata']['text'] for result in search_response['results']]

# The main entry point of the program
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
    